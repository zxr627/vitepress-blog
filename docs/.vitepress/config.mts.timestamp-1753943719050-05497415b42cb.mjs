// docs/.vitepress/config.mts
import { defineConfig } from "file:///C:/Users/Administrator/Desktop/myPro/blog/my-blog/node_modules/vitepress/dist/node/index.js";

// docs/.vitepress/blog-theme.ts
import { getThemeConfig } from "file:///C:/Users/Administrator/Desktop/myPro/blog/my-blog/node_modules/@sugarat/theme/node.mjs";
var blogTheme = getThemeConfig({
  // ÂºÄÂêØRSSÊîØÊåÅ
  // RSS,
  // ÊêúÁ¥¢
  // ÈªòËÆ§ÂºÄÂêØpagefindÁ¶ªÁ∫øÁöÑÂÖ®ÊñáÊêúÁ¥¢ÊîØÊåÅÔºàÂ¶Ç‰ΩøÁî®ÂÖ∂ÂÆÉÁöÑÂèØ‰ª•ËÆæÁΩÆ‰∏∫falseÔºâ
  // search: false,
  // markdown ÂõæË°®ÊîØÊåÅÔºà‰ºöÂ¢ûÂä†‰∏ÄÂÆöÁöÑÊûÑÂª∫ËÄóÊó∂Ôºâ
  // mermaid: true
  // È°µËÑö
  footer: {
    // message Â≠óÊÆµÊîØÊåÅÈÖçÁΩÆ‰∏∫HTMLÂÜÖÂÆπÔºåÈÖçÁΩÆÂ§öÊù°ÂèØ‰ª•ÈÖçÁΩÆ‰∏∫Êï∞ÁªÑ
    // message: '‰∏ãÈù¢ ÁöÑÂÜÖÂÆπÂíåÂõæÊ†áÈÉΩÊòØÂèØ‰ª•‰øÆÊîπÁöÑÂô¢ÔºàÂΩìÁÑ∂Êú¨Êù°ÂÜÖÂÆπ‰πüÊòØÂèØ‰ª•ÈöêËóèÁöÑÔºâ',
    copyright: "MIT License | Zxr"
    // icpRecord: {
    //   name: 'ËúÄICPÂ§á19011724Âè∑',
    //   link: 'https://beian.miit.gov.cn/'
    // },
    // securityRecord: {
    //   name: 'ÂÖ¨ÁΩëÂÆâÂ§áxxxxx',
    //   link: 'https://www.beian.gov.cn/portal/index.do'
    // },
  },
  // ‰∏ªÈ¢òËâ≤‰øÆÊîπ
  themeColor: "el-blue",
  // ÊñáÁ´†ÈªòËÆ§‰ΩúËÄÖ
  author: "Zxr",
  // ÂèãÈìæ
  friend: [
    // {
    //   nickname: 'Á≤•ÈáåÊúâÂã∫Á≥ñ',
    //   des: '‰Ω†ÁöÑÊåáÂ∞ñÁî®‰∫éÊîπÂèò‰∏ñÁïåÁöÑÂäõÈáè',
    //   avatar:
    //     'https://img.cdn.sugarat.top/mdImg/MTY3NDk5NTE2NzAzMA==674995167030',
    //   url: 'https://sugarat.top',
    // },
    // {
    //   nickname: 'Vitepress',
    //   des: 'Vite & Vue Powered Static Site Generator',
    //   avatar:
    //     'https://vitepress.dev/vitepress-logo-large.webp',
    //   url: 'https://vitepress.dev/',
    // },
  ],
  // ÂÖ¨Âëä
  popover: {
    title: "\u516C\u544A",
    body: [
      // { type: 'text', content: 'üëáÂÖ¨‰ºóÂè∑üëá---üëá ÂæÆ‰ø° üëá' },
      {
        type: "text",
        content: "\u6B22\u8FCE\u5927\u5BB6\u79C1\u4FE1\u4EA4\u6D41"
      }
      // {
      //   type: 'text',
      //   content: 'ÊñáÁ´†È¶ñ/ÊñáÂ∞æÊúâÁæ§‰∫åÁª¥Á†Å',
      //   style: 'padding-top:0'
      // },
      // {
      //   type: 'button',
      //   content: '‰ΩúËÄÖÂçöÂÆ¢',
      //   link: 'https://sugarat.top'
      // },
      // {
      //   type: 'button',
      //   content: 'Âä†Áæ§‰∫§ÊµÅ',
      //   props: {
      //     type: 'success'
      //   },
      //   link: 'https://theme.sugarat.top/group.html',
      // }
    ],
    duration: 0
  }
});

// docs/.vitepress/config.mts
var base = process.env.NODE_ENV === "production" ? "/vitepress-blog/" : "/";
var config_default = defineConfig({
  // ÁªßÊâøÂçöÂÆ¢‰∏ªÈ¢ò(@sugarat/theme)
  extends: blogTheme,
  base,
  // üëà Áî®ËøôÈáå
  lang: "zh-cn",
  title: "Zxr",
  description: "",
  lastUpdated: true,
  head: [
    // ‰ΩøÁî® base Ë∑ØÂæÑ‰øùËØÅÊ≠£Á°Æ
    ["link", { rel: "icon", href: `${base}favicon.ico` }]
  ],
  themeConfig: {
    // Â±ïÁ§∫ 2,3 Á∫ßÊ†áÈ¢òÂú®ÁõÆÂΩï‰∏≠
    outline: {
      level: [2, 3],
      label: "\u76EE\u5F55"
    },
    // ÈªòËÆ§ÊñáÊ°à‰øÆÊîπ
    returnToTopLabel: "\u56DE\u5230\u9876\u90E8",
    sidebarMenuLabel: "\u76F8\u5173\u6587\u7AE0",
    lastUpdatedText: "\u4E0A\u6B21\u66F4\u65B0\u4E8E",
    // ËÆæÁΩÆ logo Ë∑ØÂæÑ‰πüÁî® base
    logo: `${base}logo.png`,
    nav: [
      { text: "\u9996\u9875", link: "/" },
      {
        text: "\u66F4\u591A",
        items: [
          { text: "\u5F52\u6863", link: "/about1/" },
          { text: "\u5206\u7C7B", link: "/about/" }
        ]
      },
      { text: "\u5173\u4E8E\u4F5C\u8005", link: "https://github.com/zxr627?tab=projects" }
    ],
    socialLinks: [
      {
        icon: "github",
        link: "https://github.com/zxr627?tab=projects"
      }
    ]
  }
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
